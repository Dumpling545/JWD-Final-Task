users.getById=SELECT id, email, first_name, last_name, password_hash, avatar FROM users WHERE id=?
users.getByEmail=SELECT id, email, first_name, last_name, password_hash, avatar FROM users WHERE email=?
users.add=INSERT INTO users(email, first_name, last_name, password_hash) VALUES(?,?,?,?)
users.changeInfo=UPDATE users SET first_name=?, last_name=? WHERE id=?
users.changeEmail=UPDATE users SET email=? WHERE id=?
users.changePassword=UPDATE users SET password_hash=? WHERE id=?
users.setAvatar=UPDATE users SET avatar=? WHERE id=?
users.remove=DELETE FROM users WHERE id=?
hotels.isAdmin=SELECT user_id, hotel_id FROM m2m_administrator_hotel WHERE user_id=? AND hotel_id=?
hotels.getById=SELECT hotels.id, hotels.name, hotels.cached_address, hotels.longtitude_address, hotels.latitude_address, hotels.bank_account, hotels.icon FROM hotels WHERE id=?
hotels.getAdministeredBy=SELECT hotels.id, hotels.name, hotels.cached_address, hotels.longtitude_address, hotels.latitude_address, hotels.bank_account, hotels.icon FROM hotels INNER JOIN m2m_administrator_hotel ON hotels.id=m2m_administrator_hotel.hotel_id WHERE m2m_administrator_hotel.user_id=? LIMIT ?, ?
hotels.add=INSERT INTO hotels(name, cached_address, longtitude_address, latitude_address, bank_account) VALUES(?, ?, ?, ?, ?)
hotels.setIcon=UPDATE hotels SET icon=? WHERE id=?
hotels.change=UPDATE hotels SET name=?, cached_address=?, longtitude_address=?, latitude_address=?, bank_account=? WHERE id=?
hotels.remove=DELETE FROM hotels WHERE id=?
hotels.addAdmin=INSERT INTO m2m_administrator_hotel(user_id, hotel_id) VALUES (?,?)
hotels.getAdminsByHotel=SELECT id, email, first_name, last_name, password_hash, avatar FROM users INNER JOIN m2m_administrator_hotel ON users.id=m2m_administrator_hotel.user_id WHERE m2m_administrator_hotel.hotel_id=? LIMIT ?, ?
hotels.removeAdmin=DELETE FROM m2m_administrator_hotel WHERE user_id=? and hotel_id=?
rooms.getById=SELECT rooms.id, rooms.hotel_id, rooms.name, rooms.number_of_beds, rooms.short_description, rooms.cost, rooms.icon FROM rooms WHERE id=?
rooms.getByHotel=SELECT rooms.id, rooms.hotel_id, rooms.name, rooms.number_of_beds, rooms.short_description, rooms.cost, rooms.icon FROM rooms WHERE hotel_id=? LIMIT ?, ?
rooms.add=INSERT INTO rooms(hotel_id, name, number_of_beds, short_description, cost) VALUES(?, ?, ?, ?, ?)
rooms.setIcon=UPDATE rooms SET icon=? WHERE id=?
rooms.change=UPDATE rooms SET name=?, number_of_beds=?, short_description=?, cost=? WHERE id=?
rooms.remove=DELETE FROM rooms WHERE id=?
rooms.getRoomFeaturesById=SELECT room_features.has_airconditioning, room_features.has_heating, room_features.has_balcony, room_features.has_tv, room_features.has_refrigerator, room_features.has_kitchen, room_features.has_hair_dryer, room_features.has_toilet, room_features.has_shower, room_features.has_washing_machine, room_features.description FROM room_features WHERE room_id=?
rooms.addRoomFeatures=INSERT INTO room_features(room_id, has_airconditioning, has_heating, has_balcony, has_tv, has_refrigerator, has_kitchen, has_hair_dryer, has_toilet, has_shower, has_washing_machine, description) VALUES (?,?,?,?,?,?,?,?,?,?,?,?)
rooms.changeRoomFeatures=UPDATE room_features SET has_airconditioning=?, has_heating=?, has_balcony=?, has_tv=?, has_refrigerator=?, has_kitchen=?, has_hair_dryer=?, has_toilet=?, has_shower=?, has_washing_machine=?, description=? where room_id=?
rooms.removeRoomFeatures=DELETE FROM room_features WHERE room_id=?
rooms.getPhotosByRoom=SELECT room_photos.id, room_photos.extension FROM room_photos WHERE room_photos.room_id=?
rooms.addPhoto=INSERT INTO room_photos(room_id, extension) VALUES(?,?)
rooms.removePhoto=DELETE FROM room_photos WHERE room_id=? AND id=?
rooms.isAdmin=SELECT * FROM m2m_administrator_hotel INNER JOIN rooms ON m2m_administrator_hotel.hotel_id=rooms.hotel_id WHERE m2m_administrator_hotel.user_id=? AND rooms.id=? LIMIT 0, 1
rooms.getMany=SELECT rooms.id, rooms.name, hotels.cached_address, (SELECT IFNULL(AVG(reviews.rating), 0) FROM reviews LEFT JOIN archived_reservations ON reviews.reservation_id = archived_reservations.id WHERE archived_reservations.room_id = rooms.id) as `rooms.rating`, rooms.cost, rooms.icon, rooms.number_of_beds, rooms.short_description, rooms.hotel_id, hotels.name FROM (rooms LEFT JOIN hotels ON rooms.hotel_id=hotels.id) WHERE NOT EXISTS(SELECT id FROM reservations WHERE reservations.room_id=rooms.id AND ((?/*1*/ > reservations.check_in_date AND ?/*2*/ <= reservations.check_out_date) OR (reservations.check_out_date > ?/*3*/ AND reservations.check_out_date <= ?/*4*/))) AND (hotels.latitude_address BETWEEN ?/*5*/ AND ?/*6*/) AND (hotels.longtitude_address BETWEEN ?/*7*/ AND ?/*8*/) AND (rooms.cost BETWEEN ?/*9*/ AND ?/*10*/) AND rooms.number_of_beds >= ?/*11*/ HAVING (`rooms.rating` BETWEEN ?/*12*/ AND ?/*13*/) LIMIT ?/*14*/, ?/*15*/
reservations.add=INSERT INTO reservations(user_id, room_id, check_in_date, check_out_date, payment_token, status, payment_amount) values (?, ?, ?, ?, ?, ?, ?);
reservations.accept=UPDATE reservations SET status=1 WHERE id=?
reservations.remove=DELETE FROM reservations WHERE id=?
reservations.get=SELECT reservations.user_id, reservations.room_id, reservations.check_in_date, reservations.check_out_date, reservations.payment_token, reservations.status, reservations.payment_amount FROM reservations WHERE id=?
reservations.getAsArchived=SELECT users.email, hotels.id, hotels.name, rooms.name, reservations.user_id, reservations.room_id, reservations.check_in_date, reservations.check_out_date, reservations.payment_token, reservations.status, reservations.payment_amount FROM reservations INNER JOIN users ON reservations.user_id=users.id INNER JOIN rooms ON reservations.room_id=rooms.id INNER JOIN hotels ON rooms.hotel_id=hotels.id  WHERE reservations.id=?
reservations.getByUser=SELECT users.email, hotels.id, hotels.name, rooms.name, reservations.id, reservations.room_id, reservations.check_in_date, reservations.check_out_date, reservations.payment_token, reservations.status, reservations.payment_amount FROM reservations INNER JOIN rooms ON reservations.room_id=rooms.id INNER JOIN users ON reservations.user_id=users.id INNER JOIN hotels ON rooms.hotel_id=hotels.id WHERE reservations.user_id=? ORDER BY reservations.check_in_date ASC LIMIT ?, ?
reservations.getByHotel=SELECT users.email, reservations.user_id, hotels.name, rooms.name, reservations.id, reservations.room_id, reservations.check_in_date, reservations.check_out_date, reservations.payment_token, reservations.status, reservations.payment_amount FROM reservations INNER JOIN rooms ON reservations.room_id=rooms.id INNER JOIN users ON reservations.user_id=users.id INNER JOIN hotels ON rooms.hotel_id=hotels.id WHERE rooms.hotel_id=? ORDER BY reservations.check_in_date ASC LIMIT ?, ?
reservations.getByRoom=SELECT users.email, reservations.user_id, hotels.id, hotels.name, rooms.name, reservations.id, reservations.room_id, rooms.name, reservations.check_in_date, reservations.check_out_date, reservations.payment_token, reservations.status, reservations.payment_amount FROM reservations INNER JOIN rooms ON reservations.room_id=rooms.id INNER JOIN users ON reservations.user_id=users.id INNER JOIN hotels ON rooms.hotel_id=hotels.id WHERE reservations.room_id=? ORDER BY reservations.check_in_date ASC LIMIT ?, ?
reservations.isDateOccupied=SELECT id FROM reservations WHERE ((?/*checkout*/ > reservations.check_in_date AND ?/*checkout*/ <= reservations.check_out_date) OR (reservations.check_out_date > ?/*checkin*/ AND reservations.check_out_date <= ?/*checkout*/)) AND reservations.room_id=?
archivedReservations.add=INSERT INTO archived_reservations(id, user_id, email, room_id, room_name, hotel_id, hotel_name, check_in_date, check_out_date, payment_token, archivation_reason, payment_amount) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
archivedReservations.get=SELECT archived_reservations.user_id, archived_reservations.email, archived_reservations.room_id, archived_reservations.room_name, archived_reservations.hotel_id, archived_reservations.hotel_name, archived_reservations.check_in_date, archived_reservations.check_out_date, archived_reservations.payment_token, archived_reservations.archivation_reason, archived_reservations.payment_amount FROM archived_reservations WHERE archived_reservations.id=?
archivedReservations.getByUser=SELECT archived_reservations.id, archived_reservations.email, archived_reservations.room_id, archived_reservations.room_name, archived_reservations.hotel_id, archived_reservations.hotel_name, archived_reservations.check_in_date, archived_reservations.check_out_date, archived_reservations.payment_token, archived_reservations.archivation_reason, archived_reservations.payment_amount FROM archived_reservations WHERE archived_reservations.user_id=? LIMIT ?, ?
archivedReservations.getByHotel=SELECT archived_reservations.id, archived_reservations.user_id, archived_reservations.email, archived_reservations.room_id, archived_reservations.room_name, archived_reservations.hotel_name, archived_reservations.check_in_date, archived_reservations.check_out_date, archived_reservations.payment_token, archived_reservations.archivation_reason, archived_reservations.payment_amount FROM archived_reservations WHERE archived_reservations.hotel_id=? ORDER BY archived_reservations.check_in_date ASC LIMIT ?, ?
archivedReservations.getByRoom=SELECT archived_reservations.id, archived_reservations.user_id, archived_reservations.email, archived_reservations.room_name, archived_reservations.hotel_id, archived_reservations.hotel_name, archived_reservations.check_in_date, archived_reservations.check_out_date, archived_reservations.payment_token, archived_reservations.archivation_reason, archived_reservations.payment_amount FROM archived_reservations WHERE archived_reservations.room_id=? LIMIT ?, ?
reviews.getByRoom=SELECT reviews.reservation_id, IFNULL(users.email, archived_reservations.email) AS `users.email`, users.avatar, reviews.title, reviews.text, reviews.rating, reviews.date FROM reviews INNER JOIN archived_reservations ON archived_reservations.id=reviews.reservation_id LEFT JOIN users ON users.id=archived_reservations.user_id WHERE archived_reservations.room_id=? LIMIT ?,?
reviews.getRatingInfoByRoom=SELECT IFNULL(AVG(reviews.rating), 0) AS `reviews.average`, COUNT(reviews.reservation_id) AS `reviews.number_of_reviews` FROM reviews INNER JOIN archived_reservations ON archived_reservations.id=reviews.reservation_id WHERE archived_reservations.room_id=?
reviews.add=INSERT INTO reviews(reservation_id, title, text, rating, date) VALUES(?,?,?,?,?)
reviews.cannotCreateReview=SELECT archived_reservations.id FROM archived_reservations INNER JOIN reviews ON archived_reservations.id=reviews.reservation_id WHERE archived_reservations.user_id=? AND archived_reservations.archivation_reason=1 AND archived_reservations.id=?

